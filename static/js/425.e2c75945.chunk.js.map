{"version":3,"file":"static/js/425.e2c75945.chunk.js","mappings":"+NACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAAwF,yB,mBCKzE,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACtC,OAAQD,GACN,IAAK,QACH,OAAOT,EAASU,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,OAEN,EASA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaH,SAAC,gBAE7BD,EAAAA,EAAAA,MAAA,QAAMK,SAXW,SAAAC,GACnBA,EAAMC,iBACNzB,EAAS0B,EAAAA,GAAAA,MAAqB,CAAEpB,MAAAA,EAAOI,SAAAA,KACvCH,EAAS,IACTI,EAAY,GACd,EAMkCU,UAAWC,EAAaK,aAAa,MAAKR,SAAA,EACtED,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAaH,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,QACLZ,KAAK,QACLC,MAAOX,EACPuB,SAAUjB,EACVe,aAAa,MACbG,UAAQ,QAIZZ,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAaH,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAAA,SACEQ,KAAK,WACLZ,KAAK,WACLC,MAAOP,EACPmB,SAAUjB,EACVe,aAAa,MACbG,UAAQ,QAIZV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACH,KAAK,SAASI,QAAQ,YAAWb,SAAC,gBAMlD,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginPage_title__RBt-o\",\"form\":\"LoginPage_form__h3Le9\",\"label\":\"LoginPage_label__eihZ8\",\"button\":\"LoginPage_button__phWEP\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport styles from './LoginPage.module.css';\nimport Button from '@mui/material/Button';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1 className={styles.title}>Login page</h1>\n\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\n        <label className={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Log in\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"names":["LoginView","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleChange","_ref","_ref$target","target","name","value","_jsxs","children","_jsx","className","styles","onSubmit","event","preventDefault","authOperations","autoComplete","type","onChange","required","Button","variant"],"sourceRoot":""}